{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCA\\\\BPUT_Hackathon\\\\Last_hope\\\\bridge\\\\src\\\\utils\\\\codeSplitting.js\";\n/**\r\n * Code Splitting Utilities\r\n * Provides dynamic imports and lazy loading for better performance\r\n */\n\nimport React, { lazy, Suspense } from 'react';\n\n/**\r\n * Loading component for lazy-loaded components\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  message = 'Loading...'\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '40px',\n    color: '#6b7280'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '40px',\n      height: '40px',\n      border: '3px solid #e5e7eb',\n      borderTop: '3px solid #667eea',\n      borderRadius: '50%',\n      animation: 'spin 1s linear infinite',\n      marginBottom: '16px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n    children: `\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n    `\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n/**\r\n * Error boundary for lazy-loaded components\r\n */\n_c = LoadingSpinner;\nclass LazyLoadErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error('Lazy load error:', error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '40px',\n          textAlign: 'center',\n          color: '#ef4444',\n          border: '1px solid #fecaca',\n          borderRadius: '8px',\n          backgroundColor: '#fef2f2'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Failed to load component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please refresh the page to try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#ef4444',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            marginTop: '16px'\n          },\n          children: \"Refresh Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n    return this.props.children;\n  }\n}\n\n/**\r\n * Higher-order component for lazy loading\r\n */\nexport const withLazyLoading = (importFunc, loadingMessage) => {\n  const LazyComponent = /*#__PURE__*/lazy(importFunc);\n  return props => /*#__PURE__*/_jsxDEV(LazyLoadErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        message: loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(LazyComponent, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Component Preloader\r\n */\nexport class ComponentPreloader {\n  constructor() {\n    this.preloadedComponents = new Set();\n    this.preloadPromises = new Map();\n  }\n\n  /**\r\n   * Preload a component\r\n   */\n  preload(componentName, importFunc) {\n    if (this.preloadedComponents.has(componentName)) {\n      return this.preloadPromises.get(componentName);\n    }\n    const promise = importFunc().then(module => {\n      this.preloadedComponents.add(componentName);\n      console.log(`✅ Preloaded component: ${componentName}`);\n      return module;\n    }).catch(error => {\n      console.error(`❌ Failed to preload component ${componentName}:`, error);\n      throw error;\n    });\n    this.preloadPromises.set(componentName, promise);\n    return promise;\n  }\n\n  /**\r\n   * Preload critical student components\r\n   */\n  preloadCriticalStudentComponents() {\n    // This would preload critical components\n    // For now, we'll just simulate the preloading\n    console.log('🔮 Preloading critical student components...');\n    return Promise.resolve();\n  }\n\n  /**\r\n   * Get preload statistics\r\n   */\n  getPreloadStats() {\n    return {\n      preloadedCount: this.preloadedComponents.size,\n      preloadedComponents: Array.from(this.preloadedComponents),\n      pendingPreloads: this.preloadPromises.size - this.preloadedComponents.size\n    };\n  }\n}\n\n/**\r\n * Resource preloader for critical assets\r\n */\nexport class ResourcePreloader {\n  constructor() {\n    this.preloadedResources = new Set();\n  }\n\n  /**\r\n   * Preload CSS files\r\n   */\n  preloadCSS(cssFiles) {\n    cssFiles.forEach(href => {\n      if (this.preloadedResources.has(href)) return;\n      const link = document.createElement('link');\n      link.rel = 'preload';\n      link.as = 'style';\n      link.href = href;\n      link.onload = () => {\n        this.preloadedResources.add(href);\n        console.log(`✅ Preloaded CSS: ${href}`);\n      };\n      link.onerror = () => {\n        console.error(`❌ Failed to preload CSS: ${href}`);\n      };\n      document.head.appendChild(link);\n    });\n  }\n\n  /**\r\n   * Get preload statistics\r\n   */\n  getPreloadStats() {\n    return {\n      preloadedCount: this.preloadedResources.size,\n      preloadedResources: Array.from(this.preloadedResources)\n    };\n  }\n}\n\n// Create singleton instances\nexport const componentPreloader = new ComponentPreloader();\nexport const resourcePreloader = new ResourcePreloader();\n\n/**\r\n * Initialize code splitting optimizations\r\n */\nexport const initializeCodeSplitting = () => {\n  // Preload critical components\n  componentPreloader.preloadCriticalStudentComponents();\n\n  // Preload critical CSS\n  resourcePreloader.preloadCSS(['/static/css/main.css']);\n  console.log('🚀 Code splitting optimization initialized');\n};\n\n/**\r\n * Get code splitting statistics\r\n */\nexport const getCodeSplittingStats = () => {\n  return {\n    components: componentPreloader.getPreloadStats(),\n    resources: resourcePreloader.getPreloadStats(),\n    timestamp: new Date().toISOString()\n  };\n};\nexport default {\n  withLazyLoading,\n  ComponentPreloader,\n  ResourcePreloader,\n  componentPreloader,\n  resourcePreloader,\n  initializeCodeSplitting,\n  getCodeSplittingStats\n};\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","lazy","Suspense","jsxDEV","_jsxDEV","LoadingSpinner","message","style","display","flexDirection","alignItems","justifyContent","padding","color","children","width","height","border","borderTop","borderRadius","animation","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","LazyLoadErrorBoundary","Component","constructor","props","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","console","render","textAlign","backgroundColor","onClick","window","location","reload","cursor","marginTop","withLazyLoading","importFunc","loadingMessage","LazyComponent","fallback","ComponentPreloader","preloadedComponents","Set","preloadPromises","Map","preload","componentName","has","get","promise","then","module","add","log","catch","set","preloadCriticalStudentComponents","Promise","resolve","getPreloadStats","preloadedCount","size","Array","from","pendingPreloads","ResourcePreloader","preloadedResources","preloadCSS","cssFiles","forEach","href","link","document","createElement","rel","as","onload","onerror","head","appendChild","componentPreloader","resourcePreloader","initializeCodeSplitting","getCodeSplittingStats","components","resources","timestamp","Date","toISOString","$RefreshReg$"],"sources":["D:/MCA/BPUT_Hackathon/Last_hope/bridge/src/utils/codeSplitting.js"],"sourcesContent":["/**\r\n * Code Splitting Utilities\r\n * Provides dynamic imports and lazy loading for better performance\r\n */\r\n\r\nimport React, { lazy, Suspense } from 'react';\r\n\r\n/**\r\n * Loading component for lazy-loaded components\r\n */\r\nconst LoadingSpinner = ({ message = 'Loading...' }) => (\r\n  <div style={{\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '40px',\r\n    color: '#6b7280'\r\n  }}>\r\n    <div style={{\r\n      width: '40px',\r\n      height: '40px',\r\n      border: '3px solid #e5e7eb',\r\n      borderTop: '3px solid #667eea',\r\n      borderRadius: '50%',\r\n      animation: 'spin 1s linear infinite',\r\n      marginBottom: '16px'\r\n    }}></div>\r\n    <p>{message}</p>\r\n    <style>{`\r\n      @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n      }\r\n    `}</style>\r\n  </div>\r\n);\r\n\r\n/**\r\n * Error boundary for lazy-loaded components\r\n */\r\nclass LazyLoadErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error('Lazy load error:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div style={{\r\n          padding: '40px',\r\n          textAlign: 'center',\r\n          color: '#ef4444',\r\n          border: '1px solid #fecaca',\r\n          borderRadius: '8px',\r\n          backgroundColor: '#fef2f2'\r\n        }}>\r\n          <h3>Failed to load component</h3>\r\n          <p>Please refresh the page to try again.</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            style={{\r\n              padding: '8px 16px',\r\n              backgroundColor: '#ef4444',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              marginTop: '16px'\r\n            }}\r\n          >\r\n            Refresh Page\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n/**\r\n * Higher-order component for lazy loading\r\n */\r\nexport const withLazyLoading = (importFunc, loadingMessage) => {\r\n  const LazyComponent = lazy(importFunc);\r\n  \r\n  return (props) => (\r\n    <LazyLoadErrorBoundary>\r\n      <Suspense fallback={<LoadingSpinner message={loadingMessage} />}>\r\n        <LazyComponent {...props} />\r\n      </Suspense>\r\n    </LazyLoadErrorBoundary>\r\n  );\r\n};\r\n\r\n/**\r\n * Component Preloader\r\n */\r\nexport class ComponentPreloader {\r\n  constructor() {\r\n    this.preloadedComponents = new Set();\r\n    this.preloadPromises = new Map();\r\n  }\r\n\r\n  /**\r\n   * Preload a component\r\n   */\r\n  preload(componentName, importFunc) {\r\n    if (this.preloadedComponents.has(componentName)) {\r\n      return this.preloadPromises.get(componentName);\r\n    }\r\n\r\n    const promise = importFunc().then(module => {\r\n      this.preloadedComponents.add(componentName);\r\n      console.log(`✅ Preloaded component: ${componentName}`);\r\n      return module;\r\n    }).catch(error => {\r\n      console.error(`❌ Failed to preload component ${componentName}:`, error);\r\n      throw error;\r\n    });\r\n\r\n    this.preloadPromises.set(componentName, promise);\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * Preload critical student components\r\n   */\r\n  preloadCriticalStudentComponents() {\r\n    // This would preload critical components\r\n    // For now, we'll just simulate the preloading\r\n    console.log('🔮 Preloading critical student components...');\r\n    \r\n    return Promise.resolve();\r\n  }\r\n\r\n  /**\r\n   * Get preload statistics\r\n   */\r\n  getPreloadStats() {\r\n    return {\r\n      preloadedCount: this.preloadedComponents.size,\r\n      preloadedComponents: Array.from(this.preloadedComponents),\r\n      pendingPreloads: this.preloadPromises.size - this.preloadedComponents.size\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Resource preloader for critical assets\r\n */\r\nexport class ResourcePreloader {\r\n  constructor() {\r\n    this.preloadedResources = new Set();\r\n  }\r\n\r\n  /**\r\n   * Preload CSS files\r\n   */\r\n  preloadCSS(cssFiles) {\r\n    cssFiles.forEach(href => {\r\n      if (this.preloadedResources.has(href)) return;\r\n\r\n      const link = document.createElement('link');\r\n      link.rel = 'preload';\r\n      link.as = 'style';\r\n      link.href = href;\r\n      link.onload = () => {\r\n        this.preloadedResources.add(href);\r\n        console.log(`✅ Preloaded CSS: ${href}`);\r\n      };\r\n      link.onerror = () => {\r\n        console.error(`❌ Failed to preload CSS: ${href}`);\r\n      };\r\n      \r\n      document.head.appendChild(link);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get preload statistics\r\n   */\r\n  getPreloadStats() {\r\n    return {\r\n      preloadedCount: this.preloadedResources.size,\r\n      preloadedResources: Array.from(this.preloadedResources)\r\n    };\r\n  }\r\n}\r\n\r\n// Create singleton instances\r\nexport const componentPreloader = new ComponentPreloader();\r\nexport const resourcePreloader = new ResourcePreloader();\r\n\r\n/**\r\n * Initialize code splitting optimizations\r\n */\r\nexport const initializeCodeSplitting = () => {\r\n  // Preload critical components\r\n  componentPreloader.preloadCriticalStudentComponents();\r\n  \r\n  // Preload critical CSS\r\n  resourcePreloader.preloadCSS([\r\n    '/static/css/main.css'\r\n  ]);\r\n  \r\n  console.log('🚀 Code splitting optimization initialized');\r\n};\r\n\r\n/**\r\n * Get code splitting statistics\r\n */\r\nexport const getCodeSplittingStats = () => {\r\n  return {\r\n    components: componentPreloader.getPreloadStats(),\r\n    resources: resourcePreloader.getPreloadStats(),\r\n    timestamp: new Date().toISOString()\r\n  };\r\n};\r\n\r\nexport default {\r\n  withLazyLoading,\r\n  ComponentPreloader,\r\n  ResourcePreloader,\r\n  componentPreloader,\r\n  resourcePreloader,\r\n  initializeCodeSplitting,\r\n  getCodeSplittingStats\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}