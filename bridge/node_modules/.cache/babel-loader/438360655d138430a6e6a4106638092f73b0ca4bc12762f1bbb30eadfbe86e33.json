{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCA\\\\BPUT_Hackathon\\\\Last_hope\\\\bridge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// Bridge Components (updated paths)\nimport Header from './components/bridge-components/Header';\nimport Hero from './components/bridge-components/Hero';\nimport Features from './components/bridge-components/Features';\nimport FreemiumFeatures from './components/bridge-components/FreemiumFeatures';\nimport OpportunitiesStatic from './components/bridge-components/Opportunities/OpportunitiesStatic';\nimport Dashboard from './components/bridge-components/Dashboard';\nimport Footer from './components/bridge-components/Footer';\nimport LoginPage from './components/bridge-components/LoginPage';\nimport ProfileCompletionForm from './components/bridge-components/ProfileCompletionForm';\nimport StudentForm from './components/bridge-components/StudentForm';\nimport ScrollTriggeredModal from './components/bridge-components/ScrollTriggeredModal';\n\n// Context and utilities\nimport { LanguageProvider } from './contexts/LanguageContext';\nimport { NAVIGATION_STATES, DEFAULT_APP_STATE, STUDENT_PAGES } from './constants/navigationStates';\nimport { handleNavigationError } from './utils/navigationErrorHandler';\nimport { handleEnhancedNavigationError } from './utils/enhancedNavigationErrorHandler';\nimport { initializeComponentIsolation } from './utils/componentIsolation';\nimport { initializeErrorMonitoring } from './utils/errorMonitoring';\nimport { initializePerformanceOptimization } from './utils/performanceOptimizer';\nimport { initializeCodeSplitting } from './utils/codeSplitting';\nimport { initializeMemoryOptimization } from './utils/memoryOptimizer';\nimport { initializeFinalOptimizations } from './utils/finalOptimizations';\nimport { NavigationLoader, PageTransitionLoader } from './components/LoadingStates';\nimport StudentDashboardRouter from './components/StudentDashboardRouter';\nimport { injectSharedVariables } from './utils/cssConflictPrevention';\nimport { loadConditionalCSS } from './utils/cssLoader';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport ComponentErrorBoundary from './components/ComponentErrorBoundary';\nimport PerformanceDashboard from './components/PerformanceDashboard';\n\n// Styles\nimport './styles/bridge-styles/globals.css';\nimport './styles/student-styles/styles.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [appState, setAppState] = useState(DEFAULT_APP_STATE);\n  const [isNavigating, setIsNavigating] = useState(false);\n  const [navigationMessage, setNavigationMessage] = useState('');\n\n  // Initialize CSS and shared variables\n  useEffect(() => {\n    injectSharedVariables();\n    loadConditionalCSS(appState.currentPage);\n    initializeComponentIsolation();\n    initializeErrorMonitoring();\n    initializePerformanceOptimization();\n    initializeCodeSplitting();\n    initializeMemoryOptimization();\n\n    // Apply final optimizations after other systems are initialized\n    setTimeout(() => {\n      initializeFinalOptimizations();\n    }, 1000);\n  }, []);\n\n  // Load CSS when navigation state changes\n  useEffect(() => {\n    loadConditionalCSS(appState.currentPage);\n  }, [appState.currentPage]);\n\n  // Get navigation message for loading state\n  const getNavigationMessage = page => {\n    switch (page) {\n      case NAVIGATION_STATES.LOGIN:\n        return 'Loading login...';\n      case NAVIGATION_STATES.PROFILE_COMPLETION:\n        return 'Loading profile form...';\n      case NAVIGATION_STATES.STUDENT_FORM:\n        return 'Loading student form...';\n      case NAVIGATION_STATES.STUDENT_DASHBOARD:\n        return 'Loading student dashboard...';\n      case NAVIGATION_STATES.BRIDGE_HOME:\n      default:\n        return 'Loading...';\n    }\n  };\n\n  // Safe navigation with error handling\n  const navigateToPage = (page, userData = null, studentPage = null) => {\n    try {\n      // Show loading state\n      setIsNavigating(true);\n      setNavigationMessage(getNavigationMessage(page));\n\n      // Simulate brief loading for smooth transition\n      setTimeout(() => {\n        setAppState(prev => ({\n          ...prev,\n          currentPage: page,\n          currentStudentPage: studentPage || prev.currentStudentPage,\n          userData: userData || prev.userData,\n          isAuthenticated: userData ? true : prev.isAuthenticated,\n          userType: (userData === null || userData === void 0 ? void 0 : userData.userType) || prev.userType\n        }));\n\n        // Hide loading state\n        setTimeout(() => {\n          setIsNavigating(false);\n          setNavigationMessage('');\n        }, 300);\n      }, 150);\n    } catch (error) {\n      // Use enhanced navigation error handler\n      handleEnhancedNavigationError(error, page, setAppState, appState).catch(() => {\n        // Fallback to basic error handler if enhanced handler fails\n        handleNavigationError(error, page, fallbackPage => {\n          setAppState(prev => ({\n            ...prev,\n            currentPage: fallbackPage\n          }));\n        });\n      });\n    }\n  };\n\n  // Navigate within student dashboard\n  const navigateToStudentPage = studentPage => {\n    setAppState(prev => ({\n      ...prev,\n      currentStudentPage: studentPage\n    }));\n  };\n  const handleLoginSuccess = data => {\n    navigateToPage(NAVIGATION_STATES.PROFILE_COMPLETION, data);\n  };\n  const handleProfileComplete = profileData => {\n    const updatedUserData = {\n      ...appState.userData,\n      ...profileData\n    };\n\n    // Navigate to appropriate form based on user role\n    if (updatedUserData.userType === 'student') {\n      navigateToPage(NAVIGATION_STATES.STUDENT_FORM, updatedUserData);\n    } else if (updatedUserData.userType === 'employer') {\n      navigateToPage(NAVIGATION_STATES.BRIDGE_HOME, updatedUserData);\n    } else if (updatedUserData.userType === 'institution') {\n      navigateToPage(NAVIGATION_STATES.BRIDGE_HOME, updatedUserData);\n    }\n  };\n  const handleProfileSkip = () => {\n    navigateToPage(NAVIGATION_STATES.BRIDGE_HOME);\n  };\n  const handleStudentFormComplete = studentData => {\n    const updatedUserData = {\n      ...appState.userData,\n      ...studentData\n    };\n    navigateToPage(NAVIGATION_STATES.STUDENT_DASHBOARD, updatedUserData);\n  };\n  const handleStudentFormSkip = () => {\n    navigateToPage(NAVIGATION_STATES.STUDENT_DASHBOARD);\n  };\n  const handleBackToProfile = () => {\n    navigateToPage(NAVIGATION_STATES.PROFILE_COMPLETION);\n  };\n  const handleBackToLogin = () => {\n    navigateToPage(NAVIGATION_STATES.LOGIN);\n    setAppState(prev => ({\n      ...prev,\n      userData: null,\n      isAuthenticated: false\n    }));\n  };\n  const handleBackToHome = () => {\n    navigateToPage(NAVIGATION_STATES.BRIDGE_HOME);\n  };\n  const handleShowLogin = () => {\n    navigateToPage(NAVIGATION_STATES.LOGIN);\n  };\n  const renderCurrentPage = () => {\n    var _appState$userData;\n    switch (appState.currentPage) {\n      case NAVIGATION_STATES.LOGIN:\n        return /*#__PURE__*/_jsxDEV(ComponentErrorBoundary, {\n          componentName: \"LoginPage\",\n          children: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLoginSuccess: handleLoginSuccess,\n            onClose: handleBackToHome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this);\n      case NAVIGATION_STATES.PROFILE_COMPLETION:\n        return /*#__PURE__*/_jsxDEV(ComponentErrorBoundary, {\n          componentName: \"ProfileCompletionForm\",\n          children: /*#__PURE__*/_jsxDEV(ProfileCompletionForm, {\n            userRole: (_appState$userData = appState.userData) === null || _appState$userData === void 0 ? void 0 : _appState$userData.userType,\n            initialData: appState.userData,\n            onSubmit: handleProfileComplete,\n            onSkip: handleProfileSkip,\n            onBack: handleBackToLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this);\n      case NAVIGATION_STATES.STUDENT_FORM:\n        return /*#__PURE__*/_jsxDEV(ComponentErrorBoundary, {\n          componentName: \"StudentForm\",\n          children: /*#__PURE__*/_jsxDEV(StudentForm, {\n            studentData: appState.userData,\n            onSubmit: handleStudentFormComplete,\n            onSkip: handleStudentFormSkip,\n            onBack: handleBackToProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this);\n      case NAVIGATION_STATES.STUDENT_DASHBOARD:\n        return /*#__PURE__*/_jsxDEV(ComponentErrorBoundary, {\n          componentName: \"StudentDashboard\",\n          children: /*#__PURE__*/_jsxDEV(StudentDashboardRouter, {\n            userData: appState.userData,\n            onBackToHome: handleBackToHome,\n            currentStudentPage: appState.currentStudentPage,\n            onNavigateToStudentPage: navigateToStudentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this);\n      case NAVIGATION_STATES.BRIDGE_HOME:\n      default:\n        return /*#__PURE__*/_jsxDEV(ComponentErrorBoundary, {\n          componentName: \"BridgeHome\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App bridge-component\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              onShowLogin: handleShowLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Hero, {\n              onShowLogin: handleShowLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Features, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FreemiumFeatures, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OpportunitiesStatic, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ScrollTriggeredModal, {\n              onLoginSuccess: handleLoginSuccess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(LanguageProvider, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [renderCurrentPage(), /*#__PURE__*/_jsxDEV(PerformanceDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eWmkTnJw2VFqtRWvOfhqZwTPQvI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Header","Hero","Features","FreemiumFeatures","OpportunitiesStatic","Dashboard","Footer","LoginPage","ProfileCompletionForm","StudentForm","ScrollTriggeredModal","LanguageProvider","NAVIGATION_STATES","DEFAULT_APP_STATE","STUDENT_PAGES","handleNavigationError","handleEnhancedNavigationError","initializeComponentIsolation","initializeErrorMonitoring","initializePerformanceOptimization","initializeCodeSplitting","initializeMemoryOptimization","initializeFinalOptimizations","NavigationLoader","PageTransitionLoader","StudentDashboardRouter","injectSharedVariables","loadConditionalCSS","ErrorBoundary","ComponentErrorBoundary","PerformanceDashboard","jsxDEV","_jsxDEV","App","_s","appState","setAppState","isNavigating","setIsNavigating","navigationMessage","setNavigationMessage","currentPage","setTimeout","getNavigationMessage","page","LOGIN","PROFILE_COMPLETION","STUDENT_FORM","STUDENT_DASHBOARD","BRIDGE_HOME","navigateToPage","userData","studentPage","prev","currentStudentPage","isAuthenticated","userType","error","catch","fallbackPage","navigateToStudentPage","handleLoginSuccess","data","handleProfileComplete","profileData","updatedUserData","handleProfileSkip","handleStudentFormComplete","studentData","handleStudentFormSkip","handleBackToProfile","handleBackToLogin","handleBackToHome","handleShowLogin","renderCurrentPage","_appState$userData","componentName","children","onLoginSuccess","onClose","fileName","_jsxFileName","lineNumber","columnNumber","userRole","initialData","onSubmit","onSkip","onBack","onBackToHome","onNavigateToStudentPage","className","onShowLogin","_c","$RefreshReg$"],"sources":["D:/MCA/BPUT_Hackathon/Last_hope/bridge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// Bridge Components (updated paths)\nimport Header from './components/bridge-components/Header';\nimport Hero from './components/bridge-components/Hero';\nimport Features from './components/bridge-components/Features';\nimport FreemiumFeatures from './components/bridge-components/FreemiumFeatures';\nimport OpportunitiesStatic from './components/bridge-components/Opportunities/OpportunitiesStatic';\nimport Dashboard from './components/bridge-components/Dashboard';\nimport Footer from './components/bridge-components/Footer';\nimport LoginPage from './components/bridge-components/LoginPage';\nimport ProfileCompletionForm from './components/bridge-components/ProfileCompletionForm';\nimport StudentForm from './components/bridge-components/StudentForm';\nimport ScrollTriggeredModal from './components/bridge-components/ScrollTriggeredModal';\n\n// Context and utilities\nimport { LanguageProvider } from './contexts/LanguageContext';\nimport { NAVIGATION_STATES, DEFAULT_APP_STATE, STUDENT_PAGES } from './constants/navigationStates';\nimport { handleNavigationError } from './utils/navigationErrorHandler';\nimport { handleEnhancedNavigationError } from './utils/enhancedNavigationErrorHandler';\nimport { initializeComponentIsolation } from './utils/componentIsolation';\nimport { initializeErrorMonitoring } from './utils/errorMonitoring';\nimport { initializePerformanceOptimization } from './utils/performanceOptimizer';\nimport { initializeCodeSplitting } from './utils/codeSplitting';\nimport { initializeMemoryOptimization } from './utils/memoryOptimizer';\nimport { initializeFinalOptimizations } from './utils/finalOptimizations';\nimport { NavigationLoader, PageTransitionLoader } from './components/LoadingStates';\nimport StudentDashboardRouter from './components/StudentDashboardRouter';\nimport { injectSharedVariables } from './utils/cssConflictPrevention';\nimport { loadConditionalCSS } from './utils/cssLoader';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport ComponentErrorBoundary from './components/ComponentErrorBoundary';\nimport PerformanceDashboard from './components/PerformanceDashboard';\n\n// Styles\nimport './styles/bridge-styles/globals.css';\nimport './styles/student-styles/styles.css';\nimport './App.css';\n\nfunction App() {\n  const [appState, setAppState] = useState(DEFAULT_APP_STATE);\n  const [isNavigating, setIsNavigating] = useState(false);\n  const [navigationMessage, setNavigationMessage] = useState('');\n\n  // Initialize CSS and shared variables\n  useEffect(() => {\n    injectSharedVariables();\n    loadConditionalCSS(appState.currentPage);\n    initializeComponentIsolation();\n    initializeErrorMonitoring();\n    initializePerformanceOptimization();\n    initializeCodeSplitting();\n    initializeMemoryOptimization();\n    \n    // Apply final optimizations after other systems are initialized\n    setTimeout(() => {\n      initializeFinalOptimizations();\n    }, 1000);\n  }, []);\n\n  // Load CSS when navigation state changes\n  useEffect(() => {\n    loadConditionalCSS(appState.currentPage);\n  }, [appState.currentPage]);\n\n  // Get navigation message for loading state\n  const getNavigationMessage = (page) => {\n    switch (page) {\n      case NAVIGATION_STATES.LOGIN:\n        return 'Loading login...';\n      case NAVIGATION_STATES.PROFILE_COMPLETION:\n        return 'Loading profile form...';\n      case NAVIGATION_STATES.STUDENT_FORM:\n        return 'Loading student form...';\n      case NAVIGATION_STATES.STUDENT_DASHBOARD:\n        return 'Loading student dashboard...';\n      case NAVIGATION_STATES.BRIDGE_HOME:\n      default:\n        return 'Loading...';\n    }\n  };\n\n  // Safe navigation with error handling\n  const navigateToPage = (page, userData = null, studentPage = null) => {\n    try {\n      // Show loading state\n      setIsNavigating(true);\n      setNavigationMessage(getNavigationMessage(page));\n\n      // Simulate brief loading for smooth transition\n      setTimeout(() => {\n        setAppState(prev => ({\n          ...prev,\n          currentPage: page,\n          currentStudentPage: studentPage || prev.currentStudentPage,\n          userData: userData || prev.userData,\n          isAuthenticated: userData ? true : prev.isAuthenticated,\n          userType: userData?.userType || prev.userType\n        }));\n        \n        // Hide loading state\n        setTimeout(() => {\n          setIsNavigating(false);\n          setNavigationMessage('');\n        }, 300);\n      }, 150);\n    } catch (error) {\n      // Use enhanced navigation error handler\n      handleEnhancedNavigationError(error, page, setAppState, appState).catch(() => {\n        // Fallback to basic error handler if enhanced handler fails\n        handleNavigationError(error, page, (fallbackPage) => {\n          setAppState(prev => ({ ...prev, currentPage: fallbackPage }));\n        });\n      });\n    }\n  };\n\n  // Navigate within student dashboard\n  const navigateToStudentPage = (studentPage) => {\n    setAppState(prev => ({\n      ...prev,\n      currentStudentPage: studentPage\n    }));\n  };\n\n  const handleLoginSuccess = (data) => {\n    navigateToPage(NAVIGATION_STATES.PROFILE_COMPLETION, data);\n  };\n\n  const handleProfileComplete = (profileData) => {\n    const updatedUserData = { ...appState.userData, ...profileData };\n    \n    // Navigate to appropriate form based on user role\n    if (updatedUserData.userType === 'student') {\n      navigateToPage(NAVIGATION_STATES.STUDENT_FORM, updatedUserData);\n    } else if (updatedUserData.userType === 'employer') {\n      navigateToPage(NAVIGATION_STATES.BRIDGE_HOME, updatedUserData);\n    } else if (updatedUserData.userType === 'institution') {\n      navigateToPage(NAVIGATION_STATES.BRIDGE_HOME, updatedUserData);\n    }\n  };\n\n  const handleProfileSkip = () => {\n    navigateToPage(NAVIGATION_STATES.BRIDGE_HOME);\n  };\n\n  const handleStudentFormComplete = (studentData) => {\n    const updatedUserData = { ...appState.userData, ...studentData };\n    navigateToPage(NAVIGATION_STATES.STUDENT_DASHBOARD, updatedUserData);\n  };\n\n  const handleStudentFormSkip = () => {\n    navigateToPage(NAVIGATION_STATES.STUDENT_DASHBOARD);\n  };\n\n  const handleBackToProfile = () => {\n    navigateToPage(NAVIGATION_STATES.PROFILE_COMPLETION);\n  };\n\n  const handleBackToLogin = () => {\n    navigateToPage(NAVIGATION_STATES.LOGIN);\n    setAppState(prev => ({ ...prev, userData: null, isAuthenticated: false }));\n  };\n\n  const handleBackToHome = () => {\n    navigateToPage(NAVIGATION_STATES.BRIDGE_HOME);\n  };\n\n  const handleShowLogin = () => {\n    navigateToPage(NAVIGATION_STATES.LOGIN);\n  };\n\n  const renderCurrentPage = () => {\n    switch (appState.currentPage) {\n      case NAVIGATION_STATES.LOGIN:\n        return (\n          <ComponentErrorBoundary componentName=\"LoginPage\">\n            <LoginPage \n              onLoginSuccess={handleLoginSuccess} \n              onClose={handleBackToHome} \n            />\n          </ComponentErrorBoundary>\n        );\n      \n      case NAVIGATION_STATES.PROFILE_COMPLETION:\n        return (\n          <ComponentErrorBoundary componentName=\"ProfileCompletionForm\">\n            <ProfileCompletionForm\n              userRole={appState.userData?.userType}\n              initialData={appState.userData}\n              onSubmit={handleProfileComplete}\n              onSkip={handleProfileSkip}\n              onBack={handleBackToLogin}\n            />\n          </ComponentErrorBoundary>\n        );\n      \n      case NAVIGATION_STATES.STUDENT_FORM:\n        return (\n          <ComponentErrorBoundary componentName=\"StudentForm\">\n            <StudentForm\n              studentData={appState.userData}\n              onSubmit={handleStudentFormComplete}\n              onSkip={handleStudentFormSkip}\n              onBack={handleBackToProfile}\n            />\n          </ComponentErrorBoundary>\n        );\n      \n      case NAVIGATION_STATES.STUDENT_DASHBOARD:\n        return (\n          <ComponentErrorBoundary componentName=\"StudentDashboard\">\n            <StudentDashboardRouter \n              userData={appState.userData}\n              onBackToHome={handleBackToHome}\n              currentStudentPage={appState.currentStudentPage}\n              onNavigateToStudentPage={navigateToStudentPage}\n            />\n          </ComponentErrorBoundary>\n        );\n      \n      case NAVIGATION_STATES.BRIDGE_HOME:\n      default:\n        return (\n          <ComponentErrorBoundary componentName=\"BridgeHome\">\n            <div className=\"App bridge-component\">\n              <Header onShowLogin={handleShowLogin} />\n              <Hero onShowLogin={handleShowLogin} />\n              <Features />\n              <FreemiumFeatures />\n              <OpportunitiesStatic />\n              <Dashboard />\n              <Footer />\n              \n              {/* Scroll-triggered login modal */}\n              <ScrollTriggeredModal onLoginSuccess={handleLoginSuccess} />\n            </div>\n          </ComponentErrorBoundary>\n        );\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <LanguageProvider>\n        <Router>\n          {renderCurrentPage()}\n          <PerformanceDashboard />\n        </Router>\n      </LanguageProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}