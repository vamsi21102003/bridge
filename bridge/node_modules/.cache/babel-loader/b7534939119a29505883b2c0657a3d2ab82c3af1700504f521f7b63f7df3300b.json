{"ast":null,"code":"var _jsxFileName = \"C:\\\\Last_hope\\\\Last_hope\\\\bridge\\\\src\\\\components\\\\ScrollTriggeredModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoginPage from './LoginPage';\nimport './ScrollTriggeredModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollTriggeredModal = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [hasTriggered, setHasTriggered] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      // Check if user has scrolled to the bottom\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      const windowHeight = window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n\n      // Trigger when user is within 100px of the bottom\n      const isAtBottom = scrollTop + windowHeight >= documentHeight - 100;\n      if (isAtBottom && !hasTriggered) {\n        setIsModalOpen(true);\n        setHasTriggered(true);\n      }\n    };\n\n    // Add scroll event listener\n    window.addEventListener('scroll', handleScroll);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [hasTriggered]);\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleModalClick = e => {\n    // Close modal if clicking on backdrop\n    if (e.target.classList.contains('modal-backdrop')) {\n      closeModal();\n    }\n  };\n  const handleLoginSuccess = userData => {\n    closeModal();\n    if (onLoginSuccess) {\n      onLoginSuccess(userData);\n    }\n  };\n  if (!isModalOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal-backdrop ${isModalOpen ? 'modal-open' : ''}`,\n    onClick: handleModalClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-btn\",\n        onClick: closeModal,\n        \"aria-label\": \"Close modal\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLoginSuccess: handleLoginSuccess,\n          onClose: closeModal,\n          isModal: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollTriggeredModal, \"WMj3HVi/Ap27aNMDZfCS2jQQBF0=\");\n_c = ScrollTriggeredModal;\nexport default ScrollTriggeredModal;\nvar _c;\n$RefreshReg$(_c, \"ScrollTriggeredModal\");","map":{"version":3,"names":["React","useState","useEffect","LoginPage","jsxDEV","_jsxDEV","ScrollTriggeredModal","onLoginSuccess","_s","isModalOpen","setIsModalOpen","hasTriggered","setHasTriggered","handleScroll","scrollTop","window","pageYOffset","document","documentElement","windowHeight","innerHeight","documentHeight","scrollHeight","isAtBottom","addEventListener","removeEventListener","closeModal","handleModalClick","e","target","classList","contains","handleLoginSuccess","userData","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","isModal","_c","$RefreshReg$"],"sources":["C:/Last_hope/Last_hope/bridge/src/components/ScrollTriggeredModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LoginPage from './LoginPage';\r\nimport './ScrollTriggeredModal.css';\r\n\r\nconst ScrollTriggeredModal = ({ onLoginSuccess }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [hasTriggered, setHasTriggered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      // Check if user has scrolled to the bottom\r\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n      const windowHeight = window.innerHeight;\r\n      const documentHeight = document.documentElement.scrollHeight;\r\n      \r\n      // Trigger when user is within 100px of the bottom\r\n      const isAtBottom = scrollTop + windowHeight >= documentHeight - 100;\r\n      \r\n      if (isAtBottom && !hasTriggered) {\r\n        setIsModalOpen(true);\r\n        setHasTriggered(true);\r\n      }\r\n    };\r\n\r\n    // Add scroll event listener\r\n    window.addEventListener('scroll', handleScroll);\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [hasTriggered]);\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleModalClick = (e) => {\r\n    // Close modal if clicking on backdrop\r\n    if (e.target.classList.contains('modal-backdrop')) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const handleLoginSuccess = (userData) => {\r\n    closeModal();\r\n    if (onLoginSuccess) {\r\n      onLoginSuccess(userData);\r\n    }\r\n  };\r\n\r\n  if (!isModalOpen) return null;\r\n\r\n  return (\r\n    <div \r\n      className={`modal-backdrop ${isModalOpen ? 'modal-open' : ''}`}\r\n      onClick={handleModalClick}\r\n    >\r\n      <div className=\"modal-container\">\r\n        <button \r\n          className=\"modal-close-btn\"\r\n          onClick={closeModal}\r\n          aria-label=\"Close modal\"\r\n        >\r\n          âœ•\r\n        </button>\r\n        <div className=\"modal-content\">\r\n          <LoginPage \r\n            onLoginSuccess={handleLoginSuccess}\r\n            onClose={closeModal}\r\n            isModal={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollTriggeredModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}