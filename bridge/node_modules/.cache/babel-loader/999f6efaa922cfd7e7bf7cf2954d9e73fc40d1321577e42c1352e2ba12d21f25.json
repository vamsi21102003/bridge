{"ast":null,"code":"/**\r\n * CSS Conflict Prevention utilities\r\n * Helps prevent styling conflicts between bridge and student components\r\n */\n\nimport { CSS_PREFIXES } from './cssNamespacing';\n\n/**\r\n * CSS Reset for component isolation\r\n */\nexport const CSS_RESET = `\n  /* Component isolation reset */\n  .bridge-component,\n  .student-component {\n    /* Reset box model */\n    box-sizing: border-box;\n    \n    /* Reset positioning */\n    position: relative;\n    \n    /* Reset text properties */\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n    color: inherit;\n    text-align: inherit;\n    text-decoration: inherit;\n    \n    /* Reset spacing */\n    margin: 0;\n    padding: 0;\n    \n    /* Reset borders */\n    border: none;\n    outline: none;\n    \n    /* Reset background */\n    background: transparent;\n    \n    /* Reset list styles */\n    list-style: none;\n    \n    /* Reset table styles */\n    border-collapse: inherit;\n    border-spacing: inherit;\n  }\n  \n  /* Prevent global style leakage */\n  .bridge-component * {\n    box-sizing: inherit;\n  }\n  \n  .student-component * {\n    box-sizing: inherit;\n  }\n`;\n\n/**\r\n * Critical CSS variables that should be consistent across components\r\n */\nexport const SHARED_CSS_VARIABLES = {\n  // Color palette\n  '--shared-primary-color': '#667eea',\n  '--shared-secondary-color': '#764ba2',\n  '--shared-accent-color': '#feca57',\n  '--shared-success-color': '#48bb78',\n  '--shared-warning-color': '#ed8936',\n  '--shared-error-color': '#f56565',\n  '--shared-info-color': '#4299e1',\n  // Typography\n  '--shared-font-family': '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n  '--shared-font-size-base': '1rem',\n  '--shared-line-height-base': '1.6',\n  // Spacing\n  '--shared-spacing-xs': '0.25rem',\n  '--shared-spacing-sm': '0.5rem',\n  '--shared-spacing-md': '1rem',\n  '--shared-spacing-lg': '1.5rem',\n  '--shared-spacing-xl': '2rem',\n  '--shared-spacing-2xl': '3rem',\n  // Border radius\n  '--shared-border-radius-sm': '0.25rem',\n  '--shared-border-radius-md': '0.5rem',\n  '--shared-border-radius-lg': '0.75rem',\n  '--shared-border-radius-xl': '1rem',\n  '--shared-border-radius-2xl': '1.5rem',\n  // Shadows\n  '--shared-shadow-sm': '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n  '--shared-shadow-md': '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n  '--shared-shadow-lg': '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\n  '--shared-shadow-xl': '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n  // Z-index layers\n  '--shared-z-dropdown': '1000',\n  '--shared-z-sticky': '1020',\n  '--shared-z-fixed': '1030',\n  '--shared-z-modal-backdrop': '1040',\n  '--shared-z-modal': '1050',\n  '--shared-z-popover': '1060',\n  '--shared-z-tooltip': '1070',\n  '--shared-z-toast': '1080'\n};\n\n/**\r\n * Injects shared CSS variables into the document\r\n */\nexport const injectSharedVariables = () => {\n  const existingStyle = document.getElementById('shared-css-variables');\n  if (existingStyle) {\n    existingStyle.remove();\n  }\n  const style = document.createElement('style');\n  style.id = 'shared-css-variables';\n  const variablesCSS = `:root {\n    ${Object.entries(SHARED_CSS_VARIABLES).map(([key, value]) => `${key}: ${value};`).join('\\n    ')}\n  }\n  \n  ${CSS_RESET}`;\n  style.textContent = variablesCSS;\n  document.head.insertBefore(style, document.head.firstChild);\n  console.log('Shared CSS variables and reset injected');\n};\n\n/**\r\n * Detects potential CSS conflicts between loaded stylesheets\r\n * @returns {Array} - Array of potential conflicts\r\n */\nexport const detectCSSConflicts = () => {\n  const conflicts = [];\n  const stylesheets = Array.from(document.styleSheets);\n  try {\n    stylesheets.forEach((stylesheet, index) => {\n      if (!stylesheet.href) return;\n      const isBridgeCSS = stylesheet.href.includes('bridge-styles');\n      const isStudentCSS = stylesheet.href.includes('student-styles');\n      if (isBridgeCSS || isStudentCSS) {\n        try {\n          const rules = Array.from(stylesheet.cssRules || []);\n          rules.forEach(rule => {\n            if (rule.type === CSSRule.STYLE_RULE) {\n              const selector = rule.selectorText;\n\n              // Check for global selectors that might conflict\n              if (selector && !selector.includes('.bridge-') && !selector.includes('.student-')) {\n                if (selector.match(/^(body|html|\\*|\\.container|\\.header|\\.footer)$/)) {\n                  conflicts.push({\n                    type: 'global-selector',\n                    selector: selector,\n                    stylesheet: stylesheet.href,\n                    namespace: isBridgeCSS ? 'bridge' : 'student'\n                  });\n                }\n              }\n            }\n          });\n        } catch (e) {\n          // CORS or other access issues - skip this stylesheet\n          console.warn('Cannot access stylesheet rules:', stylesheet.href);\n        }\n      }\n    });\n  } catch (error) {\n    console.error('Error detecting CSS conflicts:', error);\n  }\n  return conflicts;\n};\n\n/**\r\n * Applies CSS isolation to a component\r\n * @param {HTMLElement} element - The component element\r\n * @param {string} namespace - The namespace (bridge or student)\r\n */\nexport const applyCSSIsolation = (element, namespace) => {\n  if (!element || !namespace) return;\n  const isolationClass = `${namespace}-component`;\n\n  // Add isolation class if not already present\n  if (!element.classList.contains(isolationClass)) {\n    element.classList.add(isolationClass);\n  }\n\n  // Add namespace-specific container class\n  const containerClass = `${CSS_PREFIXES[namespace.toUpperCase()]}container`;\n  if (!element.classList.contains(containerClass)) {\n    element.classList.add(containerClass);\n  }\n};\n\n/**\r\n * Removes CSS isolation from a component\r\n * @param {HTMLElement} element - The component element\r\n * @param {string} namespace - The namespace (bridge or student)\r\n */\nexport const removeCSSIsolation = (element, namespace) => {\n  if (!element || !namespace) return;\n  const isolationClass = `${namespace}-component`;\n  const containerClass = `${CSS_PREFIXES[namespace.toUpperCase()]}container`;\n  element.classList.remove(isolationClass, containerClass);\n};\n\n/**\r\n * Creates a CSS scope for dynamic styles\r\n * @param {string} namespace - The namespace for scoping\r\n * @param {string} css - The CSS to scope\r\n * @returns {string} - Scoped CSS\r\n */\nexport const createCSSScope = (namespace, css) => {\n  const scopeClass = `.${namespace}-scope`;\n\n  // Simple CSS scoping - prepend scope class to selectors\n  return css.replace(/([^{}]+){/g, (match, selector) => {\n    // Skip @media, @keyframes, and other @ rules\n    if (selector.trim().startsWith('@')) {\n      return match;\n    }\n\n    // Add scope to each selector\n    const scopedSelector = selector.split(',').map(s => `${scopeClass} ${s.trim()}`).join(', ');\n    return `${scopedSelector} {`;\n  });\n};\n\n/**\r\n * Monitors for CSS conflicts and logs warnings\r\n */\nexport const startCSSConflictMonitoring = () => {\n  // Check for conflicts periodically\n  const checkConflicts = () => {\n    const conflicts = detectCSSConflicts();\n    if (conflicts.length > 0) {\n      console.warn('CSS conflicts detected:', conflicts);\n    }\n  };\n\n  // Initial check\n  setTimeout(checkConflicts, 1000);\n\n  // Monitor for new stylesheets\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      mutation.addedNodes.forEach(node => {\n        if (node.tagName === 'LINK' && node.rel === 'stylesheet') {\n          setTimeout(checkConflicts, 100);\n        }\n        if (node.tagName === 'STYLE') {\n          setTimeout(checkConflicts, 100);\n        }\n      });\n    });\n  });\n  observer.observe(document.head, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n};","map":{"version":3,"names":["CSS_PREFIXES","CSS_RESET","SHARED_CSS_VARIABLES","injectSharedVariables","existingStyle","document","getElementById","remove","style","createElement","id","variablesCSS","Object","entries","map","key","value","join","textContent","head","insertBefore","firstChild","console","log","detectCSSConflicts","conflicts","stylesheets","Array","from","styleSheets","forEach","stylesheet","index","href","isBridgeCSS","includes","isStudentCSS","rules","cssRules","rule","type","CSSRule","STYLE_RULE","selector","selectorText","match","push","namespace","e","warn","error","applyCSSIsolation","element","isolationClass","classList","contains","add","containerClass","toUpperCase","removeCSSIsolation","createCSSScope","css","scopeClass","replace","trim","startsWith","scopedSelector","split","s","startCSSConflictMonitoring","checkConflicts","length","setTimeout","observer","MutationObserver","mutations","mutation","addedNodes","node","tagName","rel","observe","childList","subtree"],"sources":["D:/MCA/BPUT_Hackathon/Last_hope/bridge/src/utils/cssConflictPrevention.js"],"sourcesContent":["/**\r\n * CSS Conflict Prevention utilities\r\n * Helps prevent styling conflicts between bridge and student components\r\n */\r\n\r\nimport { CSS_PREFIXES } from './cssNamespacing';\r\n\r\n/**\r\n * CSS Reset for component isolation\r\n */\r\nexport const CSS_RESET = `\r\n  /* Component isolation reset */\r\n  .bridge-component,\r\n  .student-component {\r\n    /* Reset box model */\r\n    box-sizing: border-box;\r\n    \r\n    /* Reset positioning */\r\n    position: relative;\r\n    \r\n    /* Reset text properties */\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n    font-weight: inherit;\r\n    line-height: inherit;\r\n    color: inherit;\r\n    text-align: inherit;\r\n    text-decoration: inherit;\r\n    \r\n    /* Reset spacing */\r\n    margin: 0;\r\n    padding: 0;\r\n    \r\n    /* Reset borders */\r\n    border: none;\r\n    outline: none;\r\n    \r\n    /* Reset background */\r\n    background: transparent;\r\n    \r\n    /* Reset list styles */\r\n    list-style: none;\r\n    \r\n    /* Reset table styles */\r\n    border-collapse: inherit;\r\n    border-spacing: inherit;\r\n  }\r\n  \r\n  /* Prevent global style leakage */\r\n  .bridge-component * {\r\n    box-sizing: inherit;\r\n  }\r\n  \r\n  .student-component * {\r\n    box-sizing: inherit;\r\n  }\r\n`;\r\n\r\n/**\r\n * Critical CSS variables that should be consistent across components\r\n */\r\nexport const SHARED_CSS_VARIABLES = {\r\n  // Color palette\r\n  '--shared-primary-color': '#667eea',\r\n  '--shared-secondary-color': '#764ba2',\r\n  '--shared-accent-color': '#feca57',\r\n  '--shared-success-color': '#48bb78',\r\n  '--shared-warning-color': '#ed8936',\r\n  '--shared-error-color': '#f56565',\r\n  '--shared-info-color': '#4299e1',\r\n  \r\n  // Typography\r\n  '--shared-font-family': '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\r\n  '--shared-font-size-base': '1rem',\r\n  '--shared-line-height-base': '1.6',\r\n  \r\n  // Spacing\r\n  '--shared-spacing-xs': '0.25rem',\r\n  '--shared-spacing-sm': '0.5rem',\r\n  '--shared-spacing-md': '1rem',\r\n  '--shared-spacing-lg': '1.5rem',\r\n  '--shared-spacing-xl': '2rem',\r\n  '--shared-spacing-2xl': '3rem',\r\n  \r\n  // Border radius\r\n  '--shared-border-radius-sm': '0.25rem',\r\n  '--shared-border-radius-md': '0.5rem',\r\n  '--shared-border-radius-lg': '0.75rem',\r\n  '--shared-border-radius-xl': '1rem',\r\n  '--shared-border-radius-2xl': '1.5rem',\r\n  \r\n  // Shadows\r\n  '--shared-shadow-sm': '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n  '--shared-shadow-md': '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n  '--shared-shadow-lg': '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n  '--shared-shadow-xl': '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\r\n  \r\n  // Z-index layers\r\n  '--shared-z-dropdown': '1000',\r\n  '--shared-z-sticky': '1020',\r\n  '--shared-z-fixed': '1030',\r\n  '--shared-z-modal-backdrop': '1040',\r\n  '--shared-z-modal': '1050',\r\n  '--shared-z-popover': '1060',\r\n  '--shared-z-tooltip': '1070',\r\n  '--shared-z-toast': '1080'\r\n};\r\n\r\n/**\r\n * Injects shared CSS variables into the document\r\n */\r\nexport const injectSharedVariables = () => {\r\n  const existingStyle = document.getElementById('shared-css-variables');\r\n  if (existingStyle) {\r\n    existingStyle.remove();\r\n  }\r\n  \r\n  const style = document.createElement('style');\r\n  style.id = 'shared-css-variables';\r\n  \r\n  const variablesCSS = `:root {\r\n    ${Object.entries(SHARED_CSS_VARIABLES)\r\n      .map(([key, value]) => `${key}: ${value};`)\r\n      .join('\\n    ')}\r\n  }\r\n  \r\n  ${CSS_RESET}`;\r\n  \r\n  style.textContent = variablesCSS;\r\n  document.head.insertBefore(style, document.head.firstChild);\r\n  \r\n  console.log('Shared CSS variables and reset injected');\r\n};\r\n\r\n/**\r\n * Detects potential CSS conflicts between loaded stylesheets\r\n * @returns {Array} - Array of potential conflicts\r\n */\r\nexport const detectCSSConflicts = () => {\r\n  const conflicts = [];\r\n  const stylesheets = Array.from(document.styleSheets);\r\n  \r\n  try {\r\n    stylesheets.forEach((stylesheet, index) => {\r\n      if (!stylesheet.href) return;\r\n      \r\n      const isBridgeCSS = stylesheet.href.includes('bridge-styles');\r\n      const isStudentCSS = stylesheet.href.includes('student-styles');\r\n      \r\n      if (isBridgeCSS || isStudentCSS) {\r\n        try {\r\n          const rules = Array.from(stylesheet.cssRules || []);\r\n          rules.forEach(rule => {\r\n            if (rule.type === CSSRule.STYLE_RULE) {\r\n              const selector = rule.selectorText;\r\n              \r\n              // Check for global selectors that might conflict\r\n              if (selector && !selector.includes('.bridge-') && !selector.includes('.student-')) {\r\n                if (selector.match(/^(body|html|\\*|\\.container|\\.header|\\.footer)$/)) {\r\n                  conflicts.push({\r\n                    type: 'global-selector',\r\n                    selector: selector,\r\n                    stylesheet: stylesheet.href,\r\n                    namespace: isBridgeCSS ? 'bridge' : 'student'\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          });\r\n        } catch (e) {\r\n          // CORS or other access issues - skip this stylesheet\r\n          console.warn('Cannot access stylesheet rules:', stylesheet.href);\r\n        }\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error detecting CSS conflicts:', error);\r\n  }\r\n  \r\n  return conflicts;\r\n};\r\n\r\n/**\r\n * Applies CSS isolation to a component\r\n * @param {HTMLElement} element - The component element\r\n * @param {string} namespace - The namespace (bridge or student)\r\n */\r\nexport const applyCSSIsolation = (element, namespace) => {\r\n  if (!element || !namespace) return;\r\n  \r\n  const isolationClass = `${namespace}-component`;\r\n  \r\n  // Add isolation class if not already present\r\n  if (!element.classList.contains(isolationClass)) {\r\n    element.classList.add(isolationClass);\r\n  }\r\n  \r\n  // Add namespace-specific container class\r\n  const containerClass = `${CSS_PREFIXES[namespace.toUpperCase()]}container`;\r\n  if (!element.classList.contains(containerClass)) {\r\n    element.classList.add(containerClass);\r\n  }\r\n};\r\n\r\n/**\r\n * Removes CSS isolation from a component\r\n * @param {HTMLElement} element - The component element\r\n * @param {string} namespace - The namespace (bridge or student)\r\n */\r\nexport const removeCSSIsolation = (element, namespace) => {\r\n  if (!element || !namespace) return;\r\n  \r\n  const isolationClass = `${namespace}-component`;\r\n  const containerClass = `${CSS_PREFIXES[namespace.toUpperCase()]}container`;\r\n  \r\n  element.classList.remove(isolationClass, containerClass);\r\n};\r\n\r\n/**\r\n * Creates a CSS scope for dynamic styles\r\n * @param {string} namespace - The namespace for scoping\r\n * @param {string} css - The CSS to scope\r\n * @returns {string} - Scoped CSS\r\n */\r\nexport const createCSSScope = (namespace, css) => {\r\n  const scopeClass = `.${namespace}-scope`;\r\n  \r\n  // Simple CSS scoping - prepend scope class to selectors\r\n  return css.replace(/([^{}]+){/g, (match, selector) => {\r\n    // Skip @media, @keyframes, and other @ rules\r\n    if (selector.trim().startsWith('@')) {\r\n      return match;\r\n    }\r\n    \r\n    // Add scope to each selector\r\n    const scopedSelector = selector\r\n      .split(',')\r\n      .map(s => `${scopeClass} ${s.trim()}`)\r\n      .join(', ');\r\n    \r\n    return `${scopedSelector} {`;\r\n  });\r\n};\r\n\r\n/**\r\n * Monitors for CSS conflicts and logs warnings\r\n */\r\nexport const startCSSConflictMonitoring = () => {\r\n  // Check for conflicts periodically\r\n  const checkConflicts = () => {\r\n    const conflicts = detectCSSConflicts();\r\n    if (conflicts.length > 0) {\r\n      console.warn('CSS conflicts detected:', conflicts);\r\n    }\r\n  };\r\n  \r\n  // Initial check\r\n  setTimeout(checkConflicts, 1000);\r\n  \r\n  // Monitor for new stylesheets\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      mutation.addedNodes.forEach((node) => {\r\n        if (node.tagName === 'LINK' && node.rel === 'stylesheet') {\r\n          setTimeout(checkConflicts, 100);\r\n        }\r\n        if (node.tagName === 'STYLE') {\r\n          setTimeout(checkConflicts, 100);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  \r\n  observer.observe(document.head, {\r\n    childList: true,\r\n    subtree: true\r\n  });\r\n  \r\n  return observer;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}