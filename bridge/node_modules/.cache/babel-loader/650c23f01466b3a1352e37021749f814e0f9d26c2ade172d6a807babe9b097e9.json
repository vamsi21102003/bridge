{"ast":null,"code":"import{useEffect,useRef,useState}from'react';// Hook: useScrollAnimation\n// Returns a ref and a boolean indicating whether the element is visible in the viewport.\n// threshold: IntersectionObserver threshold (default 0.1)\nexport const useScrollAnimation=function(){let threshold=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0.1;const ref=useRef(null);const[isVisible,setIsVisible]=useState(false);useEffect(()=>{const node=ref.current;if(!node||typeof IntersectionObserver==='undefined')return;const observer=new IntersectionObserver(entries=>{const entry=entries[0];setIsVisible(entry.isIntersecting);},{threshold});observer.observe(node);return()=>observer.disconnect();},[threshold]);return[ref,isVisible];};export default useScrollAnimation;// Hook: useScrollDirection\n// Returns 'up', 'down', or 'none' depending on window scroll direction\nexport const useScrollDirection=function(){let threshold=arguments.length>0&&arguments[0]!==undefined?arguments[0]:50;const[direction,setDirection]=useState('none');useEffect(()=>{let lastScroll=window.pageYOffset||document.documentElement.scrollTop;let ticking=false;const update=()=>{const current=window.pageYOffset||document.documentElement.scrollTop;const diff=current-lastScroll;if(Math.abs(diff)<threshold){// ignore small movements\nticking=false;return;}setDirection(diff>0?'down':'up');lastScroll=current>0?current:0;ticking=false;};const onScroll=()=>{if(!ticking){window.requestAnimationFrame(update);ticking=true;}};window.addEventListener('scroll',onScroll);return()=>window.removeEventListener('scroll',onScroll);},[threshold]);return direction;};","map":{"version":3,"names":["useEffect","useRef","useState","useScrollAnimation","threshold","arguments","length","undefined","ref","isVisible","setIsVisible","node","current","IntersectionObserver","observer","entries","entry","isIntersecting","observe","disconnect","useScrollDirection","direction","setDirection","lastScroll","window","pageYOffset","document","documentElement","scrollTop","ticking","update","diff","Math","abs","onScroll","requestAnimationFrame","addEventListener","removeEventListener"],"sources":["C:/Last_hope/Last_hope/bridge/src/hooks/useScrollAnimation.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\n// Hook: useScrollAnimation\r\n// Returns a ref and a boolean indicating whether the element is visible in the viewport.\r\n// threshold: IntersectionObserver threshold (default 0.1)\r\nexport const useScrollAnimation = (threshold = 0.1) => {\r\n  const ref = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const node = ref.current;\r\n    if (!node || typeof IntersectionObserver === 'undefined') return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        const entry = entries[0];\r\n        setIsVisible(entry.isIntersecting);\r\n      },\r\n      { threshold }\r\n    );\r\n\r\n    observer.observe(node);\r\n\r\n    return () => observer.disconnect();\r\n  }, [threshold]);\r\n\r\n  return [ref, isVisible];\r\n};\r\n\r\nexport default useScrollAnimation;\r\n\r\n// Hook: useScrollDirection\r\n// Returns 'up', 'down', or 'none' depending on window scroll direction\r\nexport const useScrollDirection = (threshold = 50) => {\r\n  const [direction, setDirection] = useState('none');\r\n  useEffect(() => {\r\n    let lastScroll = window.pageYOffset || document.documentElement.scrollTop;\r\n    let ticking = false;\r\n\r\n    const update = () => {\r\n      const current = window.pageYOffset || document.documentElement.scrollTop;\r\n      const diff = current - lastScroll;\r\n      if (Math.abs(diff) < threshold) {\r\n        // ignore small movements\r\n        ticking = false;\r\n        return;\r\n      }\r\n      setDirection(diff > 0 ? 'down' : 'up');\r\n      lastScroll = current > 0 ? current : 0;\r\n      ticking = false;\r\n    };\r\n\r\n    const onScroll = () => {\r\n      if (!ticking) {\r\n        window.requestAnimationFrame(update);\r\n        ticking = true;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => window.removeEventListener('scroll', onScroll);\r\n  }, [threshold]);\r\n\r\n  return direction;\r\n};\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAEnD;AACA;AACA;AACA,MAAO,MAAM,CAAAC,kBAAkB,CAAG,QAAAA,CAAA,CAAqB,IAApB,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,GAAG,CAChD,KAAM,CAAAG,GAAG,CAAGP,MAAM,CAAC,IAAI,CAAC,CACxB,KAAM,CAACQ,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEjDF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,IAAI,CAAGH,GAAG,CAACI,OAAO,CACxB,GAAI,CAACD,IAAI,EAAI,MAAO,CAAAE,oBAAoB,GAAK,WAAW,CAAE,OAE1D,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAD,oBAAoB,CACtCE,OAAO,EAAK,CACX,KAAM,CAAAC,KAAK,CAAGD,OAAO,CAAC,CAAC,CAAC,CACxBL,YAAY,CAACM,KAAK,CAACC,cAAc,CAAC,CACpC,CAAC,CACD,CAAEb,SAAU,CACd,CAAC,CAEDU,QAAQ,CAACI,OAAO,CAACP,IAAI,CAAC,CAEtB,MAAO,IAAMG,QAAQ,CAACK,UAAU,CAAC,CAAC,CACpC,CAAC,CAAE,CAACf,SAAS,CAAC,CAAC,CAEf,MAAO,CAACI,GAAG,CAAEC,SAAS,CAAC,CACzB,CAAC,CAED,cAAe,CAAAN,kBAAkB,CAEjC;AACA;AACA,MAAO,MAAM,CAAAiB,kBAAkB,CAAG,QAAAA,CAAA,CAAoB,IAAnB,CAAAhB,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC/C,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGpB,QAAQ,CAAC,MAAM,CAAC,CAClDF,SAAS,CAAC,IAAM,CACd,GAAI,CAAAuB,UAAU,CAAGC,MAAM,CAACC,WAAW,EAAIC,QAAQ,CAACC,eAAe,CAACC,SAAS,CACzE,GAAI,CAAAC,OAAO,CAAG,KAAK,CAEnB,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAAAlB,OAAO,CAAGY,MAAM,CAACC,WAAW,EAAIC,QAAQ,CAACC,eAAe,CAACC,SAAS,CACxE,KAAM,CAAAG,IAAI,CAAGnB,OAAO,CAAGW,UAAU,CACjC,GAAIS,IAAI,CAACC,GAAG,CAACF,IAAI,CAAC,CAAG3B,SAAS,CAAE,CAC9B;AACAyB,OAAO,CAAG,KAAK,CACf,OACF,CACAP,YAAY,CAACS,IAAI,CAAG,CAAC,CAAG,MAAM,CAAG,IAAI,CAAC,CACtCR,UAAU,CAAGX,OAAO,CAAG,CAAC,CAAGA,OAAO,CAAG,CAAC,CACtCiB,OAAO,CAAG,KAAK,CACjB,CAAC,CAED,KAAM,CAAAK,QAAQ,CAAGA,CAAA,GAAM,CACrB,GAAI,CAACL,OAAO,CAAE,CACZL,MAAM,CAACW,qBAAqB,CAACL,MAAM,CAAC,CACpCD,OAAO,CAAG,IAAI,CAChB,CACF,CAAC,CAEDL,MAAM,CAACY,gBAAgB,CAAC,QAAQ,CAAEF,QAAQ,CAAC,CAC3C,MAAO,IAAMV,MAAM,CAACa,mBAAmB,CAAC,QAAQ,CAAEH,QAAQ,CAAC,CAC7D,CAAC,CAAE,CAAC9B,SAAS,CAAC,CAAC,CAEf,MAAO,CAAAiB,SAAS,CAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}