{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useRef, useEffect, useState } from 'react';\n\n/**\r\n * Simple scroll animation hook stub\r\n * Returns [ref, isVisible] format expected by components\r\n */\nconst useScrollAnimation = (threshold = 0.1) => {\n  _s();\n  const elementRef = useRef(null);\n  const isVisible = true; // Always visible for now\n\n  return [elementRef, isVisible];\n};\n\n/**\r\n * Hook to detect scroll direction\r\n */\n_s(useScrollAnimation, \"repxH4TU7XKbaREqsQL8GD4F8M4=\");\nconst useScrollDirection = () => {\n  _s2();\n  const [scrollDirection, setScrollDirection] = useState('up');\n  const [lastScrollY, setLastScrollY] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      if (currentScrollY > lastScrollY) {\n        setScrollDirection('down');\n      } else {\n        setScrollDirection('up');\n      }\n      setLastScrollY(currentScrollY);\n    };\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [lastScrollY]);\n  return scrollDirection;\n};\n_s2(useScrollDirection, \"epkzAPhN24rOKEBqN/SSoZUdhJI=\");\nexport { useScrollAnimation, useScrollDirection };\nexport default useScrollAnimation;","map":{"version":3,"names":["useRef","useEffect","useState","useScrollAnimation","threshold","_s","elementRef","isVisible","useScrollDirection","_s2","scrollDirection","setScrollDirection","lastScrollY","setLastScrollY","handleScroll","currentScrollY","window","scrollY","addEventListener","passive","removeEventListener"],"sources":["D:/MCA/BPUT_Hackathon/Last_hope/bridge/src/components/hooks/useScrollAnimation.js"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\r\n\r\n/**\r\n * Simple scroll animation hook stub\r\n * Returns [ref, isVisible] format expected by components\r\n */\r\nconst useScrollAnimation = (threshold = 0.1) => {\r\n  const elementRef = useRef(null);\r\n  const isVisible = true; // Always visible for now\r\n  \r\n  return [elementRef, isVisible];\r\n};\r\n\r\n/**\r\n * Hook to detect scroll direction\r\n */\r\nconst useScrollDirection = () => {\r\n  const [scrollDirection, setScrollDirection] = useState('up');\r\n  const [lastScrollY, setLastScrollY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentScrollY = window.scrollY;\r\n      \r\n      if (currentScrollY > lastScrollY) {\r\n        setScrollDirection('down');\r\n      } else {\r\n        setScrollDirection('up');\r\n      }\r\n      \r\n      setLastScrollY(currentScrollY);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [lastScrollY]);\r\n\r\n  return scrollDirection;\r\n};\r\n\r\nexport { useScrollAnimation, useScrollDirection };\r\nexport default useScrollAnimation;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAEnD;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAGA,CAACC,SAAS,GAAG,GAAG,KAAK;EAAAC,EAAA;EAC9C,MAAMC,UAAU,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMO,SAAS,GAAG,IAAI,CAAC,CAAC;;EAExB,OAAO,CAACD,UAAU,EAAEC,SAAS,CAAC;AAChC,CAAC;;AAED;AACA;AACA;AAFAF,EAAA,CAPMF,kBAAkB;AAUxB,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,cAAc,GAAGC,MAAM,CAACC,OAAO;MAErC,IAAIF,cAAc,GAAGH,WAAW,EAAE;QAChCD,kBAAkB,CAAC,MAAM,CAAC;MAC5B,CAAC,MAAM;QACLA,kBAAkB,CAAC,IAAI,CAAC;MAC1B;MAEAE,cAAc,CAACE,cAAc,CAAC;IAChC,CAAC;IAEDC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,EAAE;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IAClE,OAAO,MAAMH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;EACjE,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,OAAOF,eAAe;AACxB,CAAC;AAACD,GAAA,CAtBID,kBAAkB;AAwBxB,SAASL,kBAAkB,EAAEK,kBAAkB;AAC/C,eAAeL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}