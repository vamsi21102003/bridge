{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\n\n// Hook: useScrollAnimation\n// Returns a ref and a boolean indicating whether the element is visible in the viewport.\n// threshold: IntersectionObserver threshold (default 0.1)\nexport const useScrollAnimation = (threshold = 0.1) => {\n  _s();\n  const ref = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const node = ref.current;\n    if (!node || typeof IntersectionObserver === 'undefined') return;\n    const observer = new IntersectionObserver(entries => {\n      const entry = entries[0];\n      setIsVisible(entry.isIntersecting);\n    }, {\n      threshold\n    });\n    observer.observe(node);\n    return () => observer.disconnect();\n  }, [threshold]);\n  return [ref, isVisible];\n};\n_s(useScrollAnimation, \"Wk8baY7uc+CWSrD2kMBp+I8qtIg=\");\nexport default useScrollAnimation;","map":{"version":3,"names":["useEffect","useRef","useState","useScrollAnimation","threshold","_s","ref","isVisible","setIsVisible","node","current","IntersectionObserver","observer","entries","entry","isIntersecting","observe","disconnect"],"sources":["D:/MCA/BPUT_Hackathon/bridge/src/hooks/useScrollAnimation.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\n// Hook: useScrollAnimation\r\n// Returns a ref and a boolean indicating whether the element is visible in the viewport.\r\n// threshold: IntersectionObserver threshold (default 0.1)\r\nexport const useScrollAnimation = (threshold = 0.1) => {\r\n  const ref = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const node = ref.current;\r\n    if (!node || typeof IntersectionObserver === 'undefined') return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        const entry = entries[0];\r\n        setIsVisible(entry.isIntersecting);\r\n      },\r\n      { threshold }\r\n    );\r\n\r\n    observer.observe(node);\r\n\r\n    return () => observer.disconnect();\r\n  }, [threshold]);\r\n\r\n  return [ref, isVisible];\r\n};\r\n\r\nexport default useScrollAnimation;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAEnD;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,SAAS,GAAG,GAAG,KAAK;EAAAC,EAAA;EACrD,MAAMC,GAAG,GAAGL,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACd,MAAMS,IAAI,GAAGH,GAAG,CAACI,OAAO;IACxB,IAAI,CAACD,IAAI,IAAI,OAAOE,oBAAoB,KAAK,WAAW,EAAE;IAE1D,MAAMC,QAAQ,GAAG,IAAID,oBAAoB,CACtCE,OAAO,IAAK;MACX,MAAMC,KAAK,GAAGD,OAAO,CAAC,CAAC,CAAC;MACxBL,YAAY,CAACM,KAAK,CAACC,cAAc,CAAC;IACpC,CAAC,EACD;MAAEX;IAAU,CACd,CAAC;IAEDQ,QAAQ,CAACI,OAAO,CAACP,IAAI,CAAC;IAEtB,OAAO,MAAMG,QAAQ,CAACK,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEf,OAAO,CAACE,GAAG,EAAEC,SAAS,CAAC;AACzB,CAAC;AAACF,EAAA,CAtBWF,kBAAkB;AAwB/B,eAAeA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}