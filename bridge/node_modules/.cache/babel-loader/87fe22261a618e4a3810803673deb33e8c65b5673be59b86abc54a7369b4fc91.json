{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCA\\\\BPUT_Hackathon\\\\Last_hope\\\\bridge\\\\src\\\\contexts\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  // Load saved language from localStorage\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('bridgeLanguage');\n    if (savedLanguage && ['en', 'hi', 'or'].includes(savedLanguage)) {\n      setCurrentLanguage(savedLanguage);\n    }\n  }, []);\n\n  // Save language to localStorage when changed\n  const changeLanguage = language => {\n    console.log('Language changed to:', language);\n    setCurrentLanguage(language);\n    localStorage.setItem('bridgeLanguage', language);\n  };\n  const value = {\n    currentLanguage,\n    changeLanguage,\n    t: key => {\n      var _translations$current, _translations$en;\n      const translation = ((_translations$current = translations[currentLanguage]) === null || _translations$current === void 0 ? void 0 : _translations$current[key]) || ((_translations$en = translations.en) === null || _translations$en === void 0 ? void 0 : _translations$en[key]) || key;\n      return translation;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// Translation data\n_s2(LanguageProvider, \"cMCHjbyjwnsHFUd9PeCD7soxopg=\");\n_c = LanguageProvider;\nconst translations = {\n  en: {\n    // Header\n    'header.logo': 'BriDGe',\n    'header.search': 'Search opportunities, courses, mentors...',\n    'header.opportunities': 'Opportunities',\n    'header.mentors': 'Mentors',\n    'header.games': 'Games',\n    'header.badges': 'Badges',\n    'header.aipro': 'AI Pro',\n    'header.profile': 'Profile',\n    // Profile\n    'profile.title': 'Profile',\n    'profile.viewProfile': 'View Profile →',\n    'profile.personalInfo': 'Personal Information',\n    'profile.education': 'Education',\n    'profile.skills': 'Skills & Languages',\n    'profile.experience': 'Experience & Projects',\n    'profile.additional': 'Additional Info',\n    'profile.save': 'Save Changes',\n    'profile.preview': 'Preview Profile',\n    'profile.profileViews': 'Profile Views',\n    'profile.achievements': 'Achievements',\n    'profile.currentLevel': 'Current Level',\n    'profile.skillsExpertise': 'Skills & Expertise',\n    'profile.achievementsBadges': 'Achievements & Badges',\n    'profile.recentActivity': 'Recent Activity',\n    'profile.viewAllBadges': 'View All Badges',\n    'profile.email': 'Email',\n    'profile.location': 'Location',\n    'profile.university': 'University',\n    'profile.graduationYear': 'Graduation Year',\n    'profile.earned': 'Earned',\n    'profile.inProgress': 'In Progress',\n    'profile.completedCourse': 'Completed React Course',\n    'profile.earnedBadge': 'Earned Code Master Badge',\n    'profile.joinedTeam': 'Joined Hackathon Team',\n    'profile.updatedProfile': 'Updated Profile',\n    'profile.hoursAgo': 'hours ago',\n    'profile.dayAgo': 'day ago',\n    'profile.daysAgo': 'days ago',\n    'profile.weekAgo': 'week ago',\n    // Common\n    'common.backToProfile': '← Back to Profile',\n    'common.male': 'Male',\n    'common.female': 'Female',\n    'common.other': 'Other',\n    'common.preferNotToSay': 'Prefer not to say',\n    'common.required': '*',\n    // Language Selector\n    'language.english': 'English',\n    'language.hindi': 'हिंदी',\n    'language.odia': 'ଓଡ଼ିଆ'\n  }\n};\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","context","Error","LanguageProvider","children","_s2","currentLanguage","setCurrentLanguage","savedLanguage","localStorage","getItem","includes","changeLanguage","language","console","log","setItem","value","t","key","_translations$current","_translations$en","translation","translations","en","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MCA/BPUT_Hackathon/Last_hope/bridge/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [currentLanguage, setCurrentLanguage] = useState('en');\r\n\r\n  // Load saved language from localStorage\r\n  useEffect(() => {\r\n    const savedLanguage = localStorage.getItem('bridgeLanguage');\r\n    if (savedLanguage && ['en', 'hi', 'or'].includes(savedLanguage)) {\r\n      setCurrentLanguage(savedLanguage);\r\n    }\r\n  }, []);\r\n\r\n  // Save language to localStorage when changed\r\n  const changeLanguage = (language) => {\r\n    console.log('Language changed to:', language);\r\n    setCurrentLanguage(language);\r\n    localStorage.setItem('bridgeLanguage', language);\r\n  };\r\n\r\n  const value = {\r\n    currentLanguage,\r\n    changeLanguage,\r\n    t: (key) => {\r\n      const translation = translations[currentLanguage]?.[key] || translations.en?.[key] || key;\r\n      return translation;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={value}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\n// Translation data\r\nconst translations = {\r\n  en: {\r\n    // Header\r\n    'header.logo': 'BriDGe',\r\n    'header.search': 'Search opportunities, courses, mentors...',\r\n    'header.opportunities': 'Opportunities',\r\n    'header.mentors': 'Mentors',\r\n    'header.games': 'Games',\r\n    'header.badges': 'Badges',\r\n    'header.aipro': 'AI Pro',\r\n    'header.profile': 'Profile',\r\n    \r\n    // Profile\r\n    'profile.title': 'Profile',\r\n    'profile.viewProfile': 'View Profile →',\r\n    'profile.personalInfo': 'Personal Information',\r\n    'profile.education': 'Education',\r\n    'profile.skills': 'Skills & Languages',\r\n    'profile.experience': 'Experience & Projects',\r\n    'profile.additional': 'Additional Info',\r\n    'profile.save': 'Save Changes',\r\n    'profile.preview': 'Preview Profile',\r\n    'profile.profileViews': 'Profile Views',\r\n    'profile.achievements': 'Achievements',\r\n    'profile.currentLevel': 'Current Level',\r\n    'profile.skillsExpertise': 'Skills & Expertise',\r\n    'profile.achievementsBadges': 'Achievements & Badges',\r\n    'profile.recentActivity': 'Recent Activity',\r\n    'profile.viewAllBadges': 'View All Badges',\r\n    'profile.email': 'Email',\r\n    'profile.location': 'Location',\r\n    'profile.university': 'University',\r\n    'profile.graduationYear': 'Graduation Year',\r\n    'profile.earned': 'Earned',\r\n    'profile.inProgress': 'In Progress',\r\n    'profile.completedCourse': 'Completed React Course',\r\n    'profile.earnedBadge': 'Earned Code Master Badge',\r\n    'profile.joinedTeam': 'Joined Hackathon Team',\r\n    'profile.updatedProfile': 'Updated Profile',\r\n    'profile.hoursAgo': 'hours ago',\r\n    'profile.dayAgo': 'day ago',\r\n    'profile.daysAgo': 'days ago',\r\n    'profile.weekAgo': 'week ago',\r\n    \r\n    // Common\r\n    'common.backToProfile': '← Back to Profile',\r\n    'common.male': 'Male',\r\n    'common.female': 'Female',\r\n    'common.other': 'Other',\r\n    'common.preferNotToSay': 'Prefer not to say',\r\n    'common.required': '*',\r\n    \r\n    // Language Selector\r\n    'language.english': 'English',\r\n    'language.hindi': 'हिंदी',\r\n    'language.odia': 'ଓଡ଼ିଆ'\r\n  }\r\n};\r\n\r\nexport default LanguageContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}